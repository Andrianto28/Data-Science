{"cells":[{"cell_type":"markdown","metadata":{"id":"ee7rUDWDZ8ye"},"source":["# Module 4\n","## Section: Logistic Regression"]},{"cell_type":"markdown","metadata":{"id":"7xx5S0tDZ8yi"},"source":["## Lab 1: Introduction to Logistic Regression"]},{"cell_type":"markdown","metadata":{"id":"ctQs_w2SZ8yi"},"source":["<br><br><br><br>\n","\n","## Objective\n","\n","- Can a Linear Regression model be used to solve a classification problem?\n","- What is a Decision Boundary?\n","- Sigmoid Function\n","    - Intuition\n","    - Simple Modifications\n","    - Interpretation\n","- Decision Boundary Intuition with Examples\n","- Enter Logistic Regression"]},{"cell_type":"code","execution_count":1,"metadata":{"id":"1R0BawpRZ8yj","executionInfo":{"status":"ok","timestamp":1647396422847,"user_tz":-420,"elapsed":1202,"user":{"displayName":"Muhammad Andrianto","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh31MHquGcnCYLBjpwJXgQGVE8M-R0e6Xe4zxXdVw=s64","userId":"17189627055887835221"}}},"outputs":[],"source":["# Importing Libraries\n","import numpy as np\n","import matplotlib.pyplot as plt\n","# import seaborn as sns\n","import pandas as pd\n","from sklearn.model_selection import train_test_split\n","%matplotlib inline\n","from sklearn.datasets import make_classification\n"]},{"cell_type":"code","source":["X, y = make_classification(n_samples=10, n_features=1, n_informative=1, n_redundant=0 , n_clusters_per_class=1, flip_y=0, random_state=7)"],"metadata":{"id":"LDYCH_5WfFVa","executionInfo":{"status":"ok","timestamp":1647396645001,"user_tz":-420,"elapsed":400,"user":{"displayName":"Muhammad Andrianto","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh31MHquGcnCYLBjpwJXgQGVE8M-R0e6Xe4zxXdVw=s64","userId":"17189627055887835221"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","source":["make_classification(n_samples=20, n_features=1, n_informative=1, n_redundant=0 , n_clusters_per_class=1, flip_y=0, random_state=7)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5FvDogwPel8P","executionInfo":{"status":"ok","timestamp":1647396657594,"user_tz":-420,"elapsed":407,"user":{"displayName":"Muhammad Andrianto","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh31MHquGcnCYLBjpwJXgQGVE8M-R0e6Xe4zxXdVw=s64","userId":"17189627055887835221"}},"outputId":"4857adf4-23f0-4b5e-a6f9-933aeb054576"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(array([[ 1.19174704],\n","        [-0.16729447],\n","        [ 0.79863943],\n","        [-1.3812564 ],\n","        [ 0.6292815 ],\n","        [-1.64554159],\n","        [ 1.12585829],\n","        [-1.00072856],\n","        [ 1.45885291],\n","        [ 0.38328407],\n","        [ 2.06618671],\n","        [-2.43581501],\n","        [ 2.11995168],\n","        [ 1.17809556],\n","        [ 0.59312599],\n","        [-0.66654705],\n","        [-0.97314468],\n","        [ 0.9091134 ],\n","        [-0.50863804],\n","        [-0.99830983]]),\n"," array([1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0]))"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","execution_count":6,"metadata":{"scrolled":true,"id":"63z5_v9pZ8yk","outputId":"cb64a3d7-80f3-4c08-e276-25e7f54cc78c","colab":{"base_uri":"https://localhost:8080/","height":388},"executionInfo":{"status":"ok","timestamp":1647396713045,"user_tz":-420,"elapsed":499,"user":{"displayName":"Muhammad Andrianto","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh31MHquGcnCYLBjpwJXgQGVE8M-R0e6Xe4zxXdVw=s64","userId":"17189627055887835221"}}},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 720x432 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}],"source":["# Plotting \n","plt.figure(figsize=(10,6))\n","plt.scatter(X, y, c='r', marker='x')\n","plt.ylabel(\"Malignant Tumor {1: Yes  0: No}\")\n","plt.xlabel(\"Tumor Size\")\n","plt.show()"]},{"cell_type":"markdown","metadata":{"id":"Xlxb7Ua9Z8yl"},"source":["<br><br><br><br>\n","### What type of Problem is this? \n","***\n"," - The output, \"y\" has two **categories** i.e. 1 (Yes) or 0 (No) Klasifikasi biner\n"," \n"," - Thus, as we have learnt before, this is a **Classification Problem** where we are using our dependent variables, in this case Tumor Size, and are getting a **binary** output, 1 (Yes) or 0 (No)! \n"," \n"," - Let's approach this problem with what we've learnt so far"]},{"cell_type":"markdown","metadata":{"id":"CZKwQ0cDZ8yl"},"source":["<br><br><br><br>\n","### The Problem Explained\n","***\n"," - We have a dataset which has details about the loan approval.\n"," - Through the dataset, we basically want to find out that using different characteristics, do loans get approved {1: Yes} or not {0: No}\n"," - This is, in essence, nothing but a classification problem. \n"," \n"," - We wanted to check, before applying, whether our request would be approved after we fit the **right model** on the data! \n"," - But before we do that, let's build our intution on the '*model building*' part using the Tumor data! You will see how comprehensive this approach is"]},{"cell_type":"markdown","metadata":{"id":"mcaJkSX5Z8ym"},"source":["<br><br><br><br>\n","## Can Linear Regression be used to solve a classification problem?\n","***\n","\n","* Lets try and apply the same Linear Regression model we learned to solve the problem of classification on a dataset."]},{"cell_type":"code","execution_count":7,"metadata":{"id":"snS-TsgfZ8ym","outputId":"30c5a61c-0ad7-423a-a867-bc2ace39e495","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1647396873178,"user_tz":-420,"elapsed":368,"user":{"displayName":"Muhammad Andrianto","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh31MHquGcnCYLBjpwJXgQGVE8M-R0e6Xe4zxXdVw=s64","userId":"17189627055887835221"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["LinearRegression()"]},"metadata":{},"execution_count":7}],"source":["from sklearn.linear_model import LinearRegression\n","lm = LinearRegression()\n","lm.fit(X, y)"]},{"cell_type":"code","execution_count":10,"metadata":{"id":"016mpiKHZ8yn","executionInfo":{"status":"ok","timestamp":1647397060741,"user_tz":-420,"elapsed":3,"user":{"displayName":"Muhammad Andrianto","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh31MHquGcnCYLBjpwJXgQGVE8M-R0e6Xe4zxXdVw=s64","userId":"17189627055887835221"}}},"outputs":[],"source":["z = np.linspace(-2, 2, 1000)\n","z_predict = lm.intercept_ + (lm.coef_ * z)  #intercept (titik potong) # im.coef adalah gradien pers garis, untuk membuat garis di scatterplot"]},{"cell_type":"code","execution_count":11,"metadata":{"scrolled":false,"id":"AqHYE3DuZ8yn","outputId":"567d080e-f7e0-46a4-ec00-6cdc24aab345","colab":{"base_uri":"https://localhost:8080/","height":388},"executionInfo":{"status":"ok","timestamp":1647397062126,"user_tz":-420,"elapsed":960,"user":{"displayName":"Muhammad Andrianto","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh31MHquGcnCYLBjpwJXgQGVE8M-R0e6Xe4zxXdVw=s64","userId":"17189627055887835221"}}},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 720x432 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}],"source":["plt.figure(figsize=(10,6))\n","plt.scatter(X, y, c='r', marker='x')\n","plt.plot(z, z_predict)\n","plt.ylabel(\"Presence of Cancer {1: Yes  0: No}\")\n","plt.xlabel(\"Tumor Size\")\n","plt.show()"]},{"cell_type":"markdown","metadata":{"id":"hUYi5m7bZ8yo"},"source":["### Intuition behind the Decision Boundary\n","***\n","* We have fitted a linear regression model which is represented by the blue line\n","* How do we convert a continuous output into a discrete one?\n","* One way we can do is using a threshold value for the linear regression output\n","\n","\n","* Our output is either 1 or 0, and since we can even get predicted values between 0 and 1 like 0.2, 0.6, etc. (The regression line), we need to come up with a method where our output (0.2, 0.6, etc) is **transformed** to either **0** or **1**\n","\n","\n","* A reasonable threshold to keep for a 0-1 problem is 0.5. So, if our predicted value (y) is **greater than 0.5** then we assign a **\"1\"** to it \n","* If y is **less than 0.5** then we assign a **\"0\"** to it\n"]},{"cell_type":"markdown","metadata":{"id":"ku16gNpPZ8yp"},"source":["<br><br><br><br>\n","## What is Decision Boundary?\n","***\n","\n","* Tracing the line of y = 0.5 all the way to it's corresponding x - value (See graph below) we can get to know this \"Threshold\" value\n","\n","* This \"Threshold Value\" is x = __\n","\n","* This means that if x > _ then y > 0.5 (i.e. y = 1) \n","\n","* If x < _ then y < 0.5 (i.e. y = 0)\n","\n","* Therefore, this vertical line (x = _ ) which separates the 2 classes (y = 1 & 0) ---> **Decision Boundary**"]},{"cell_type":"code","execution_count":12,"metadata":{"id":"WmBRY4-DZ8yq","outputId":"85b003be-1d66-483f-b837-c2a2d135138c","colab":{"base_uri":"https://localhost:8080/","height":405},"executionInfo":{"status":"ok","timestamp":1647397222077,"user_tz":-420,"elapsed":505,"user":{"displayName":"Muhammad Andrianto","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh31MHquGcnCYLBjpwJXgQGVE8M-R0e6Xe4zxXdVw=s64","userId":"17189627055887835221"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["Text(0, 0.5, 'Target')"]},"metadata":{},"execution_count":12},{"output_type":"display_data","data":{"text/plain":["<Figure size 720x432 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}],"source":["x_critical = (0.5 - lm.intercept_)/ lm.coef_\n","\n","plt.figure(figsize=(10,6))\n","plt.scatter(X, y, c='r', marker='x')\n","plt.plot(z, z_predict)\n","plt.axvline(x=x_critical, color='r', linestyle='--')\n","plt.axhline(y=0.5, color='g', linestyle='--')\n","plt.xlabel('Feature')\n","plt.ylabel('Target')"]},{"cell_type":"markdown","metadata":{"id":"y4umfwF1Z8yq"},"source":["<br><br><br><br>\n","### Linear Regression - Not a Good Idea\n","***\n","* The problem with this approach is that Linear Regression isn't robust to outliers and it changes the fit drastically in the presence of an outlier\n","\n","\n","* We'll add an outlier and keep the same threshold as before to see the difference."]},{"cell_type":"code","execution_count":13,"metadata":{"scrolled":true,"id":"HRTAnbT7Z8yq","executionInfo":{"status":"ok","timestamp":1647397228768,"user_tz":-420,"elapsed":341,"user":{"displayName":"Muhammad Andrianto","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh31MHquGcnCYLBjpwJXgQGVE8M-R0e6Xe4zxXdVw=s64","userId":"17189627055887835221"}}},"outputs":[],"source":["new_obs = 20\n","X = np.vstack([X, new_obs])\n","y = np.append(y, 1)\n","lm = LinearRegression()\n","lm.fit(X, y)\n","z = np.linspace(-2, new_obs, 1000)\n","z_predict = lm.intercept_ + (lm.coef_ * z)\n","x_critical2 = (0.5 - lm.intercept_)/ lm.coef_"]},{"cell_type":"code","execution_count":14,"metadata":{"scrolled":false,"id":"arbl75VLZ8yr","outputId":"429752bb-46ce-40be-d2df-394f3bb6bbed","colab":{"base_uri":"https://localhost:8080/","height":388},"executionInfo":{"status":"ok","timestamp":1647397230721,"user_tz":-420,"elapsed":425,"user":{"displayName":"Muhammad Andrianto","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh31MHquGcnCYLBjpwJXgQGVE8M-R0e6Xe4zxXdVw=s64","userId":"17189627055887835221"}}},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 720x432 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}],"source":["plt.figure(figsize=(10,6))\n","plt.scatter(X, y, c='r', marker='x')\n","plt.plot(z, z_predict)\n","plt.axvline(x=x_critical, color='r', linestyle='--')\n","plt.axvline(x=x_critical2, color='y', linestyle='--')\n","plt.xlabel('Feature')\n","plt.ylabel('Target')\n","plt.show()"]},{"cell_type":"markdown","metadata":{"id":"E30eUiLNZ8yr"},"source":["<br><br><br><br>\n","### Linear Regression - Not a Good Idea \n","***\n","* We see that our Decision Boundary has shifted to the right. As a result we get some incorrect predicted \"y-values\" (the one's left of the boundary) \n","\n","* Since the data is labeled we know that they're originally = \"1\". But being on the left of the decision boundary indicates that they should be assigned a \"0\"\n","\n","* Thus Linear Regression is not suitable for classification tasks as it is highly sensitive to outliers\n","\n","* We clearly need a better model to solve the problem of classification"]},{"cell_type":"markdown","metadata":{"id":"5mkFSUVwZ8yr"},"source":["<br><br><br><br><br><br><br><br>\n","## Enter Logistic Regression\n","***\n","* To overcome the limitations of Linear Regression we'll use another model suitable for classification i.e., Logistic Regression.\n","\n","\n","* What do we need? \n","  - We need 0 <= y <= 1\n","  \n","* For this purpose we need to use a different function (and not the Linear Regression \"y = mx + b\")\n","\n","* This function is the **Sigmoid Function**\n"]},{"cell_type":"markdown","metadata":{"id":"MLYCJiPCZ8yr"},"source":["<br><br><br><br>\n","## Sigmoid function\n","***\n","* We need to get the values in the range of (0,1) \n","\n","* Let's have a look at the graph of the Sigmoid Function and then get into building the intuition\n","***\n","\n","<center><img src=\"https://raw.githubusercontent.com/bluedataconsulting/AIMasteryProgram/main/Lab_Exercises/Module4/images/sigmoid.png\" alt=\"Oh Chris\" style=\"width: 275px;\"/></center>"]},{"cell_type":"markdown","metadata":{"id":"P509DHy6Z8yr"},"source":["## Intuition\n","***\n"," - The function above is $g(z) = \\frac {1} {(1 + e^(-z))}$   for values of t ranging from - infinity , + infinity\n"," \n"," - $g(z)$ is also called as \"Sigmoid of 'z' or just sig(z)\"\n"," \n"," - Again, let's start by plugging in the extremes of it's range\n"," \n"," $g(-infinity) = \\frac {1} {(1 + infinity)} = ~0$\n"," \n"," \n","   $g( infinity) = \\frac {1} {(1 + ~0)} = ~1$\n"," \n"," - No matter what value \"z\" takes, we will always get an answer in the range of **[0,1]**"]},{"cell_type":"markdown","metadata":{"id":"SxfP6a7DZ8ys"},"source":["<br><br><br><br>\n","### Simple Modifications\n","***\n","\n"," - Now, instead of sig(z) let's consider sig(y) **where y ---> our response**\n"," \n"," - But as discussed before; $y = \\theta_0 + \\theta_1(x1) + \\theta_2(x_2) + .. + \\theta_n(x_n)$\n"," \n"," - Thus, $g(y) = g(h_{\\theta}(x)) = 1/(1 + e^{-(\\theta* X)})$"]},{"cell_type":"markdown","metadata":{"id":"Ab1d_0YDZ8ys"},"source":["<br><br><br><br>\n","### Interpretation - Let's put it simply\n","***\n","In essence: \n","\n"," - $h_θ(x)$ is the ** Estimated Probability that y = 1 on input \"X\"** \n"," \n"," - Example: $h_θ(x)$ = 0.7 in our Tumor problem **MEANS** there is a 70% chance of Tumor being **Malignant**\n"," \n"," - Thus, mathematically, $h_θ(x)$ = P(y=1 | x; θ) means that **Probability that y = 1 given X and parameterized by θ**\n"," \n"," - Thus **P(y=1 | x;θ) + P(y=0 | x;θ) = 1**\n","\n"]},{"cell_type":"markdown","metadata":{"id":"TdJIlPJ6Z8ys"},"source":["<br><br><br><br>\n","### Decision Boundary Intuition with Examples\n","***\n","\n","We can see that g(z) >= 0.5 when z >= 0\n","\n","Thus $h_θ(x)$ = g(θ*X)) >= 0.5 whenever θ x $X$ >= 0\n","\n","<center><img src=\"https://raw.githubusercontent.com/bluedataconsulting/AIMasteryProgram/main/Lab_Exercises/Module4/images/sigmoid.png\" alt=\"Oh Chris\" style=\"width: 275px;\"/></center>"]},{"cell_type":"markdown","metadata":{"id":"ukTcNZygZ8ys"},"source":[" - Consider: $h_θ(x) = g(θ_0 + θ_1x_1 + θ_2x_2)$\n","\n"," - The graph below shows y - values (0 when \"O\" & 1 when \"X\") given values of $x_1$& $x_2$\n","***\n","<center><img src=\"https://raw.githubusercontent.com/bluedataconsulting/AIMasteryProgram/main/Lab_Exercises/Module4/images/logistic_regression.png\" alt=\"Math\" style=\"width: 275px;\"/></center>"]},{"cell_type":"code","source":[""],"metadata":{"id":"J3wb6mEZcb3E"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"UYWog3N0Z8ys"},"source":["So, for example  $θ_0 = -3, θ_1 = 1, θ_2 = 1$\n","     \n","So our parameter vector is a column vector with the above values\n","   - So, $θ^T$  = [-3,1,1]\n","   \n","Thus the z here becomes θ x $X$\n"]},{"cell_type":"code","execution_count":15,"metadata":{"id":"-QimAdN0Z8ys","outputId":"0f202238-93a2-4f4a-ba6e-e22472660720","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1647397426058,"user_tz":-420,"elapsed":418,"user":{"displayName":"Muhammad Andrianto","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh31MHquGcnCYLBjpwJXgQGVE8M-R0e6Xe4zxXdVw=s64","userId":"17189627055887835221"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["LogisticRegression()"]},"metadata":{},"execution_count":15}],"source":["from sklearn.linear_model import LogisticRegression\n","clf = LogisticRegression()\n","\n","X, y = make_classification(n_samples=10, n_features=1, n_informative=1, n_redundant=0 , n_clusters_per_class=1, flip_y=0, random_state=7)\n","clf = LogisticRegression()\n","clf.fit(X, y)"]},{"cell_type":"code","execution_count":16,"metadata":{"scrolled":false,"id":"khhB9KO1Z8yt","outputId":"e31ab8e8-9cfa-43ad-d61f-796ff8e4ef11","colab":{"base_uri":"https://localhost:8080/","height":405},"executionInfo":{"status":"ok","timestamp":1647397479180,"user_tz":-420,"elapsed":484,"user":{"displayName":"Muhammad Andrianto","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh31MHquGcnCYLBjpwJXgQGVE8M-R0e6Xe4zxXdVw=s64","userId":"17189627055887835221"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["Text(0, 0.5, 'Target')"]},"metadata":{},"execution_count":16},{"output_type":"display_data","data":{"text/plain":["<Figure size 720x432 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}],"source":["plt.figure(figsize=(10,6))\n","plt.scatter(X, y, c='r', marker='x')\n","xt = np.linspace(-3, 3, 1000).reshape(1000,1)\n","yt = clf.predict(xt)\n","plt.plot(xt, yt)\n","plt.xlabel('Feature')\n","plt.ylabel('Target')"]},{"cell_type":"markdown","metadata":{"id":"NL0tnuVHZ8yt"},"source":["* In the case with no outliers Logistic Regression does a good job in seperating the classes\n","* We'll add an outlier and check if it still manages to do the same"]},{"cell_type":"code","execution_count":17,"metadata":{"id":"BEOYEawfZ8yt","outputId":"63607ad4-cadd-459a-9b21-24311250b4e6","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1647397853845,"user_tz":-420,"elapsed":584,"user":{"displayName":"Muhammad Andrianto","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh31MHquGcnCYLBjpwJXgQGVE8M-R0e6Xe4zxXdVw=s64","userId":"17189627055887835221"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["LogisticRegression()"]},"metadata":{},"execution_count":17}],"source":["new_obs = 20\n","X = np.vstack([X, new_obs])\n","y = np.append(y, 1)\n","clf.fit(X, y)"]},{"cell_type":"code","execution_count":18,"metadata":{"id":"gCQT_Mu1Z8yt","outputId":"c2b1784a-a0c0-4816-edc1-00812f005b6d","colab":{"base_uri":"https://localhost:8080/","height":405},"executionInfo":{"status":"ok","timestamp":1647397857077,"user_tz":-420,"elapsed":13,"user":{"displayName":"Muhammad Andrianto","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh31MHquGcnCYLBjpwJXgQGVE8M-R0e6Xe4zxXdVw=s64","userId":"17189627055887835221"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["Text(0, 0.5, 'Target')"]},"metadata":{},"execution_count":18},{"output_type":"display_data","data":{"text/plain":["<Figure size 720x432 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}],"source":["plt.figure(figsize=(10,6))\n","plt.scatter(X, y, c='r', marker='x')\n","xt = np.linspace(-5, 25, 1000).reshape(1000,1)\n","yt = clf.predict(xt)\n","plt.plot(xt, yt)\n","plt.xlabel('Feature')\n","plt.ylabel('Target')"]},{"cell_type":"markdown","metadata":{"id":"G583WluMZ8yt"},"source":["* Even after adding outliers LR seperates the classes well.\n","* Thus its much more suitable for classification.\n"]},{"cell_type":"markdown","metadata":{"id":"6pAbdi6_Z8yu"},"source":["### Thank you!"]}],"metadata":{"anaconda-cloud":{},"celltoolbar":"Slideshow","kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.8"},"colab":{"name":"Modul pagi rabu logistic regression","provenance":[{"file_id":"18WY9x_cQgPDfg74S1jnPC2JCHYGHAu9o","timestamp":1647396190412}],"collapsed_sections":[]}},"nbformat":4,"nbformat_minor":0}